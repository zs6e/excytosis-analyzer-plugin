package ExocytosisAnalyzer.datasets;

import ij.measure.Calibration;

public class VesicleParametres {

	public int Radius; 
	public int maxRadius;
	//public double Percent; 
	public double sensitivity;
	public boolean useWavelet;
	public boolean showLowpass;
	private final int[] availableScale = {1, 3, 7, 13, 25}; //pixel
	public boolean[] scaleList =  {false, false, false, false, false};
	public double pixelSize;
	public double interval;
	public String pixelUnit;
	public String timeUnit;
	public Calibration imageCalibration;
	
	public VesicleParametres() {
		
	}
	
	public VesicleParametres(String aRadius, String aMax, String aSensitivity) {
		
		Radius = Integer.parseInt(aRadius);
		maxRadius = Integer.parseInt(aMax);
		//Percent = Double.parseDouble(aPercent);
		sensitivity = Double.parseDouble(aSensitivity);	

		boolean isEnable = false;
		for(int i = 0; i<5; i++) {
			if (availableScale[i]>=(Radius*2-1) && availableScale[i]<=(maxRadius*2-1)) {
				scaleList[i]=true;
				isEnable = true;
			}
		}
		if (!isEnable) {
			for(int i = 1; i<5; i++) {
				if (availableScale[i]>=(Radius*2-1)) {
					scaleList[i-1]=true;
					break;
				}
			}
		}
	}
	
	public void setRadius(String aRadius){
		 Radius = Integer.parseInt(aRadius);
	}	
		
	public void setMaxRadius(String aMax){
		maxRadius = Integer.parseInt(aMax);
	}	 	
	   
	//public void setPercent(String aPercent){
	//	Percent = Double.parseDouble(aPercent);// 10f; //1-100%
	//}   
	    
	public void setSensitivity(String aSensitivity){
		sensitivity = Double.parseDouble(aSensitivity);
	} 
	public void setCalibration(Calibration aCalibration){
		imageCalibration = aCalibration;
	} 

	public void setScaleList(int aMinRadius, int aMaxRadius) {
		boolean isEnable = false;
		for(int i = 0; i<5; i++) {
		   	if (availableScale[i]>=aMinRadius*2 && availableScale[i]<=aMaxRadius*2) {
		   		scaleList[i]=true;
		   		isEnable = true;
		   	}
		}
		if (!isEnable) {
		   	for(int i = 0; i<5; i++) {
		   		if (availableScale[i]>=aMinRadius*2) {
		   			scaleList[i-1]=true;
		   			break;
		   		}
		   	}
		}
	}
	
}